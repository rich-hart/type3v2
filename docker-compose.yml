version: '3.3'

services:

  db:
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_USER: root
      POSTGRES_DB: project
#    ports:
#      - 5432:5432
#    volumes:
#      - ./data/psql:/var/lib/postgresql/data #TODO: Make sure volume is mounted

  adminer:
    image: adminer
#    restart: always
    ports:
      - 9090:8080
  backend:
    image: project:latest
    container_name: project_backend
    build: .
    ports:
      - 8000:8000
    environment:
      - SQL_HOST=db
#      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
#      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
#      - DJANGO_JWT_REDIRECT=next
      - NEO4J_BOLT_URL=bolt://neo4j:neo4j@neo4j:7687
      - CELERY_BROKER_URL=amqp://guest:guest@queue:5672//
      - CELERY_RESULT_BACKEND=amqp://guest:guest@queue:5672//
    depends_on:
      - db
      - queue
#    volumes:
#      - ./data/www/:/var/www/
  worker:
    image: project:latest
    container_name: project_worker
    command: celery -A project worker --loglevel=info
    environment:
      - SQL_HOST=db
#      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
#      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - NEO4J_BOLT_URL=bolt://neo4j:neo4j@neo4j:7687
      - CELERY_BROKER_URL=amqp://guest:guest@queue:5672//
      - CELERY_RESULT_BACKEND=amqp://guest:guest@queue:5672//
      - DJANGO_SETTINGS_MODULE=project.settings.dev
    depends_on:
      - db
      - backend
      - queue
      - cache
      - mongo
  queue:
    container_name: rabbitmq
    image: rabbitmq:3-management
    ports:
#      - 5672:5672
      - 8080:15672
#NOTE:FIXME check is memcache size can handle large images
  cache:
    container_name: memcached
    image: memcached
#    ports:
#      - 11211:11211


  mongo:
#    image: mongo
    image: mongo:4.2.0
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: guest
      MONGO_INITDB_ROOT_PASSWORD: guest
      MONGO_INITDB_DATABASE: test-database
#    ports:
#      - 27017:27017
#    volumes:
#      - ./data/mongo:/data/db
  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: guest
      ME_CONFIG_MONGODB_ADMINPASSWORD: guest
  neo4j:
    image: neo4j:3.3
    restart: always
    ports:
      - 7474:7474
#      - 7687:7687
    environment:
      NEO4J_AUTH: none #dev only
      NEO4J_cypher_default__language__version: 3.3
#    volumes:
#      - ./data/neo4j:/data 

